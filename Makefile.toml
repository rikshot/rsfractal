[env]
CARGO_MAKE_WORKSPACE_SKIP_MEMBERS = ["mandelbrot"]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

[config]
skip_core_tasks = true

[tasks.debug]
description = "Build debug"
env = { RUSTFLAGS = "-C target-feature=+atomics,+bulk-memory,+simd128,+mutable-globals" }
command = "cargo"
args = ["build", "--target", "wasm32-unknown-unknown", "-Z", "build-std=std,panic_abort"]

[tasks.debug-wasm]
description = "Generate debug wrapper"
dependencies = ["debug"]
command = "wasm-bindgen"
args = ["../target/wasm32-unknown-unknown/debug/rsfractal_wasm.wasm", "--debug", "--keep-debug", "--out-dir", "../docs", "--target", "web", "--no-typescript", "--weak-refs", "--reference-types"]

[tasks.release]
description = "Build release"
env = { RUSTFLAGS = "-C target-feature=+atomics,+bulk-memory,+simd128,+mutable-globals" }
command = "cargo"
args = ["build", "--target", "wasm32-unknown-unknown", "-Z", "build-std=std,panic_abort", "--release"]

[tasks.release-wasm]
description = "Generate release wrapper"
command = "wasm-bindgen"
args = ["../target/wasm32-unknown-unknown/release/rsfractal_wasm.wasm", "--out-dir", "../docs", "--target", "web", "--no-demangle", "--no-typescript", "--weak-refs", "--reference-types"]

[tasks.fix-wrapper]
description = "Fix missing typeof check for Window when running inside a Worker"
script = ["sed -i '' -e 's/arg0 instanceof Window/typeof Window !== \"undefined\" \\&\\& arg0 instanceof Window/' ../docs/rsfractal_wasm.js"]

[tasks.optimize-wasm]
description = "Optimize release WASM with wasm-opt"
dependencies = ["release-wasm"]
command = "wasm-opt"
args = ["../docs/rsfractal_wasm_bg.wasm", "-o", "../docs/rsfractal_wasm_bg.wasm", "-O0", "--all-features", "--fast-math"]

[tasks.precompress-wasm]
description = "Precompress release WASM with gzip"
dependencies = ["release-wasm"]
command = "gzip"
args = ["--best", "--keep", "--force", "../docs/rsfractal_wasm_bg.wasm"]

[tasks.optimize-js]
description = "Optimize release JS with terser"
dependencies = ["release-wasm"]
command = "terser"
args = ["-c", "-m", "-o", "../docs/rsfractal_wasm.js", "../docs/rsfractal_wasm.js"]

[tasks.precompress-js]
description = "Precompress release JS with gzip"
dependencies = ["release-wasm"]
command = "gzip"
args = ["--best", "--keep", "--force", "../docs/rsfractal_wasm.js"]

[tasks.publish]
description = "Publish with optimizations"
dependencies = [
    "release",
    "release-wasm",
    "fix-wrapper",
    "optimize-wasm",
    "precompress-wasm",
    "optimize-js",
    "precompress-js"
]

[tasks.watch]
description = "Build, create wasms, and watch/recompile files for changes"
dependencies = ["debug", "debug-wasm", "fix-wrapper"]
watch = { ignore_pattern="../docs/*" }

[tasks.serve]
description = "Start server"
command = "nginx"
args = ["-p", "..", "-c", "config/nginx.local.conf"]

[tasks.start]
description = "Combine the build and serve tasks"
dependencies = ["debug", "debug-wasm", "fix-wrapper", "serve"]
